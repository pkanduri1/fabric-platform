# ======================================
# FABRIC PLATFORM - MAIN CONFIGURATION
# ======================================
# Base configuration with profile-specific overrides
# Default profile points to development environment

spring:
  # Application Configuration
  application:
    name: fabric-platform
    version: ${project.version}
    
  # Default Profile Selection
  profiles:
    active: local
    
  # Configuration Import Strategy
  config:
    import:
      - optional:classpath:batch-sources/
      - optional:file:./config/
      - optional:file:./config/local/

  # Base Database Configuration (Override in profiles)
  datasource:
    url: ${DB_URL:jdbc:oracle:thin:@localhost:1521:XE}
    username: ${DB_USERNAME:fabric_user}
    password: ${DB_PASSWORD:changeme}
    driver-class-name: oracle.jdbc.OracleDriver
    
    # Base Connection Pool Settings
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
      auto-commit: false
      pool-name: FabricPool

  # Redis Configuration for WebSocket Session Management
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 2
          max-wait: 5000ms

  # Spring Batch Configuration
  batch:
    job:
      enabled: false  # Manual job triggering only
    jdbc:
      initialize-schema: never  # Schema managed externally
      table-prefix: ${DB_BATCH_PREFIX:BATCH_}
    repository:
      incrementer:
        prefix: ${DB_SCHEMA_PREFIX:}

  # Base JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.OracleDialect
    hibernate:
      ddl-auto: validate  # Never auto-create in any environment
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    open-in-view: false  # Prevent lazy loading issues

  # Base Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: ${REDIS_TIMEOUT:2000ms}
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 2
          max-wait: 2000ms

# Fabric Platform Base Configuration
fabric:
  # Application Metadata
  application:
    name: Fabric Platform
    description: Enterprise Data Loading and Batch Processing Platform
    version: ${project.version}
    build-timestamp: ${maven.build.timestamp}
    
  # Security Base Configuration
  security:
    jwt:
      secret: ${JWT_SECRET:override-in-profile}
      access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:900}
      refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:28800}
      issuer: ${JWT_ISSUER:fabric-platform}
      audience: ${JWT_AUDIENCE:fabric-users}
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
      allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
      allowed-headers: ${CORS_ALLOWED_HEADERS:*}
      allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
    csrf:
      enabled: ${CSRF_ENABLED:true}

# US008: WebSocket Real-Time Monitoring Configuration
fabric:
  monitoring:
    websocket:
      # Connection and Security Settings
      allowed-origins:
        - ${WS_ALLOWED_ORIGINS:https://*.truist.com,https://fabric-platform.truist.com}
      allow-localhost: ${WS_ALLOW_LOCALHOST:false}
      max-connections: ${WS_MAX_CONNECTIONS:100}
      max-connections-per-user: ${WS_MAX_CONNECTIONS_PER_USER:3}
      max-connections-per-ip: ${WS_MAX_CONNECTIONS_PER_IP:10}
      connection-timeout-ms: ${WS_CONNECTION_TIMEOUT:30000}
      
      # Message and Transport Settings
      max-message-size: ${WS_MAX_MESSAGE_SIZE:65536}
      send-buffer-size: ${WS_SEND_BUFFER_SIZE:524288}
      send-timeout-ms: ${WS_SEND_TIMEOUT:10000}
      time-to-first-message: ${WS_TIME_TO_FIRST_MESSAGE:60000}
      heartbeat-interval-ms: ${WS_HEARTBEAT_INTERVAL:25000}
      disconnect-delay-ms: ${WS_DISCONNECT_DELAY:5000}
      message-cache-size: ${WS_MESSAGE_CACHE_SIZE:1000}
      max-stream-bytes: ${WS_MAX_STREAM_BYTES:524288}
      
      # Thread Pool and Performance Settings
      channel-core-pool-size: ${WS_CHANNEL_CORE_POOL_SIZE:4}
      channel-max-pool-size: ${WS_CHANNEL_MAX_POOL_SIZE:8}
      channel-keep-alive-seconds: ${WS_CHANNEL_KEEP_ALIVE:60}
      scheduler-pool-size: ${WS_SCHEDULER_POOL_SIZE:4}
      
      # Real-Time Monitoring Settings
      update-interval-ms: ${WS_UPDATE_INTERVAL:5000}
      min-update-interval-ms: ${WS_MIN_UPDATE_INTERVAL:2000}
      max-update-interval-ms: ${WS_MAX_UPDATE_INTERVAL:15000}
      adaptive-intervals: ${WS_ADAPTIVE_INTERVALS:true}
      delta-updates: ${WS_DELTA_UPDATES:true}
      message-compression: ${WS_MESSAGE_COMPRESSION:true}
      max-jobs-per-update: ${WS_MAX_JOBS_PER_UPDATE:100}
      role-based-filtering: ${WS_ROLE_BASED_FILTERING:true}
      
      # Security and Compliance Settings
      audit-logging: ${WS_AUDIT_LOGGING:true}
      security-event-logging: ${WS_SECURITY_EVENT_LOGGING:true}
      token-rotation-interval-ms: ${WS_TOKEN_ROTATION_INTERVAL:900000}
      session-validation-interval-ms: ${WS_SESSION_VALIDATION_INTERVAL:60000}
      max-failed-auth-attempts: ${WS_MAX_FAILED_AUTH_ATTEMPTS:5}
      rate-limit-requests-per-minute: ${WS_RATE_LIMIT_REQUESTS:100}
      rate-limit-connections-per-minute: ${WS_RATE_LIMIT_CONNECTIONS:10}
      rate-limit-block-duration-minutes: ${WS_RATE_LIMIT_BLOCK_DURATION:15}
      
      # Redis and Caching Settings
      redis-key-prefix: ${WS_REDIS_KEY_PREFIX:fabric:websocket}
      redis-session-ttl-seconds: ${WS_REDIS_SESSION_TTL:3600}
      redis-session-clustering: ${WS_REDIS_SESSION_CLUSTERING:true}
      cache-update-metrics: ${WS_CACHE_UPDATE_METRICS:true}
      cache-ttl-seconds: ${WS_CACHE_TTL:30}
      
      # Circuit Breaker Settings
      circuit-breaker-enabled: ${WS_CIRCUIT_BREAKER_ENABLED:true}
      circuit-breaker-failure-rate: ${WS_CIRCUIT_BREAKER_FAILURE_RATE:50.0}
      circuit-breaker-wait-duration-ms: ${WS_CIRCUIT_BREAKER_WAIT_DURATION:30000}
      circuit-breaker-sliding-window-size: ${WS_CIRCUIT_BREAKER_SLIDING_WINDOW:10}
      circuit-breaker-minimum-calls: ${WS_CIRCUIT_BREAKER_MIN_CALLS:5}
      
      # Monitoring and Alerting Settings
      performance-monitoring: ${WS_PERFORMANCE_MONITORING:true}
      performance-metrics-interval-ms: ${WS_PERFORMANCE_METRICS_INTERVAL:30000}
      memory-usage-alert-threshold: ${WS_MEMORY_ALERT_THRESHOLD:85.0}
      cpu-usage-alert-threshold: ${WS_CPU_ALERT_THRESHOLD:90.0}
      response-time-alert-threshold-ms: ${WS_RESPONSE_TIME_ALERT_THRESHOLD:5000}
      error-rate-alert-threshold: ${WS_ERROR_RATE_ALERT_THRESHOLD:5.0}
      session-stale-timeout-ms: ${WS_SESSION_STALE_TIMEOUT:1800000}
      
      # Feature Flags
      development-mode: ${WS_DEVELOPMENT_MODE:false}
      debug-logging: ${WS_DEBUG_LOGGING:false}
      metrics-export-enabled: ${WS_METRICS_EXPORT_ENABLED:true}
      health-check-enabled: ${WS_HEALTH_CHECK_ENABLED:true}
      graceful-shutdown-enabled: ${WS_GRACEFUL_SHUTDOWN_ENABLED:true}
      graceful-shutdown-timeout-seconds: ${WS_GRACEFUL_SHUTDOWN_TIMEOUT:30}

  # Batch Processing Base Configuration
  batch:
    grid-size: ${BATCH_GRID_SIZE:10}
    chunk-size: ${BATCH_CHUNK_SIZE:1000}
    defaults:
      input-base-path: ${INPUT_BASE_PATH:/data/input}
      output-base-path: ${OUTPUT_BASE_PATH:/data/output}
      staging-schema: ${STAGING_SCHEMA:FABRIC_STAGING}
      dest-schema: ${DEST_SCHEMA:FABRIC_DATA}
      batch-date-param: ${BATCH_DATE_PARAM:batch_date}
      batch-date-value: "#{jobExecutionContext['batchDate']}"

  # Data Loading Base Configuration
  data-loader:
    batch-size: ${DATA_LOADER_BATCH_SIZE:1000}
    chunk-size: ${DATA_LOADER_CHUNK_SIZE:100}
    max-threads: ${DATA_LOADER_MAX_THREADS:4}
    error-threshold: ${DATA_LOADER_ERROR_THRESHOLD:0.05}
    temp-directory: ${TEMP_DIRECTORY:/tmp/fabric}

  # File Processing Base Configuration
  file-processing:
    input-directory: ${INPUT_DIR:./data/input}
    output-directory: ${OUTPUT_DIR:./data/output}
    archive-directory: ${ARCHIVE_DIR:./data/archive}
    error-directory: ${ERROR_DIR:./data/error}
    max-file-size: ${MAX_FILE_SIZE:100MB}
    allowed-extensions: ${ALLOWED_EXTENSIONS:csv,txt,xlsx,json,xml}

  # SQL*Loader Base Configuration
  sql-loader:
    oracle-home: ${ORACLE_HOME:/opt/oracle/client}
    control-file-template: ${CONTROL_FILE_TEMPLATE:pipe-delimited-control-template.ctl}
    parallel-degree: ${SQL_LOADER_PARALLEL:2}
    direct-path: ${SQL_LOADER_DIRECT_PATH:false}

# Base Logging Configuration
logging:
  level:
    com.truist.batch: ${LOG_LEVEL_FABRIC:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:WARN}
    org.springframework.batch: ${LOG_LEVEL_BATCH:WARN}
    org.hibernate: ${LOG_LEVEL_HIBERNATE:WARN}
    org.springframework.web: ${LOG_LEVEL_WEB:INFO}
    root: ${LOG_LEVEL_ROOT:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] %logger{50} - %msg%n"
  file:
    name: ${LOG_FILE:./logs/fabric-platform.log}
    max-file-size: ${LOG_MAX_FILE_SIZE:10MB}
    max-history: ${LOG_MAX_HISTORY:30}

# Base Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info,metrics}
      base-path: /actuator
  endpoint:
    health:
      show-details: ${HEALTH_SHOW_DETAILS:when-authorized}
      probes:
        enabled: ${HEALTH_PROBES_ENABLED:true}
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: ${PROMETHEUS_ENABLED:false}
        
        # Base Server Configuration        # Base Server Configuration        # Base Server Configuration        # Base Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/api}
  compression:
    enabled: ${COMPRESSION_ENABLED:true}
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# Base Documentation Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: ${API_DOCS_ENABLED:true}
  swagger-ui:
    path: /swagger-ui.html
    enabled: ${SWAGGER_UI_ENABLED:true}
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: ${SWAGGER_SHOW_ACTUATOR:false}

---
# Profile Selection Help
spring:
  config:
    activate:
      on-profile: "help"

# When --spring.profiles.active=help is used, show available profiles
fabric:
  profiles:
    available:
      - name: "dev"
        description: "Development environment with local Oracle database"
        usage: "--spring.profiles.active=dev"
      - name: "test" 
        description: "Testing environment with H2 in-memory database"
        usage: "--spring.profiles.active=test"
      - name: "staging"
        description: "Staging environment with AWS RDS Oracle"
        usage: "--spring.profiles.active=staging"
      - name: "prod"
        description: "Production environment with Oracle Enterprise"
        usage: "--spring.profiles.active=prod"
      - name: "mongodb"
        description: "MongoDB document database configuration"
        usage: "--spring.profiles.active=mongodb"
      - name: "redis"
        description: "Redis-focused caching and session management"
        usage: "--spring.profiles.active=redis"
      - name: "aws"
        description: "AWS RDS with multiple database support"
        usage: "--spring.profiles.active=aws,postgresql"
    combinations:
      - "dev,redis - Development with Redis session management"
      - "staging,mongodb - Staging with MongoDB document storage"
      - "aws,mysql - AWS RDS MySQL configuration"
      - "aws,aurora-postgresql - AWS Aurora PostgreSQL cluster"